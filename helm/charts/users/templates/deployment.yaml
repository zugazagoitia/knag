apiVersion: apps/v1
kind: Deployment
metadata:
  name: knag-users-api-deployment
  labels:
    app.kubernetes.io/name: knag-users-api
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.image.tag }}
    app.kubernetes.io/component: users-api
    app.kubernetes.io/part-of: knag
    app.kubernetes.io/managed-by: helm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: knag-users-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 300    
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:                
    metadata:
      labels:
        app: users-api
    spec:
      containers:
      - name: users-api
        image: ghcr.io/zugazagoitia/knag-users:0.1.0
        ports:
        - containerPort: 8080

  template:
    metadata:
      labels:
        app.kubernetes.io/name: knag-users-api
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: knag-users-api
        image: ghcr.io/zugazagoitia/knag-users:{{ .Values.image.tag }}
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: {{ .Values.db.host | default (include "mongodb.service.nameOverride" .Subcharts.mongodb) }}
        - name: SPRING_DATA_MONGODB_PORT
          value: {{ .Values.db.port | quote}}
        - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
          value: {{ .Values.db.name }}
        - name: SPRING_DATA_MONGODB_DATABASE
          value: {{ .Values.db.name }}
        - name: SPRING_DATA_MONGODB_USERNAME
          value: {{ .Values.db.username }}
        - name: SPRING_DATA_MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: knag-users-db-secret
              key: mongodb-passwords
              optional: false 

        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: "/actuator/health/liveness"
            port: 3000
          initialDelaySeconds: 1
          periodSeconds: 1
        livenessProbe:
          httpGet:
            path: "/actuator/health/liveness"
            port: 3000
          initialDelaySeconds: 1
          periodSeconds: 5      